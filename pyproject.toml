[tool.poetry]
name = "service_lib"
version = "0.1.0"
description = ""
authors = ["Roman Nesytov <rnesytov@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
loguru = "^0.5"
pydantic = { version = "^1.7", extras = ["dotenv"] }
aiopg = { version = "^1.1", optional = true }
aioredis = { version = "^1.3", optional = true }
aiokafka = { version = "^0.7.1", optional = true }
uvicorn = { version = "^0.13", extras = ["uvloop"], optional = true }
fastapi = { version = "^0.63", optional = true }
sqlalchemy = { version = "~1.3.24", optional = true }
motor = { version = "^2.3.1", optional = true }
aiohttp = { version = "^3.7.3", optional = true }
starlette-exporter = { version = "^0.8.2", optional = true }
sentry-sdk = "^1.1.0"
prometheus-client = "^0.11.0"

[tool.poetry.extras]
redis = ["aioredis"]
postgres = ["aiopg", "sqlalchemy"]
kafka = ["aiokafka"]
web = ["uvicorn", "fastapi", "starlette-exporter"]
mongo = ["motor"]
aiohttp = ["aiohttp"]
all = ["aioredis", "aiopg", "sqlalchemy", "aiokafka", "uvicorn", "fastapi", "motor", "aiohttp", "starlette-exporter"]

[tool.poetry.dev-dependencies]
black = "^20.8b1"
isort = "^5.7"
mypy = "0.910"
pytest = "^6.2"
flake8 = "^3.8"
testcontainers = "^3.2"
pytest-asyncio = "^0.14"
ipdb = "^0.13.7"
aioresponses = "^0.7.2"
async-asgi-testclient = "^1.4.6"
pytest-freezegun = "^0.4.2"
tenacity = "^8.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']

[tool.isort]
line_length=120
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true

[tool.mypy]
python_version = "3.8"
warn_redundant_casts = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (use pytest --skip-slow to skip slow tests)",
    "consumer_topic"
]
